# Name: invite
# Description: modules and configuration shared by all forwarding INVITE modules

#
# This code is only used by recipes where we forward the INVITE.
# If the INVITE is terminated locally (e.g. with a 302/404 pair)
# then there is no need to use this code in a recipe.
#

onreply_route[invite]
{
  xlog("L_INFO","-- onreply_route(1) -- $si -- $mb\n");

  # In-progress flag
  if( t_check_status("[12][0-9][0-9]") ) {
      setbflag(bflag_in_progress);
  }

  # SDP mangling: Linksys SPA2102 improper SDP
  replace_body_all("a=rtpmap:18 G729a/8000", "a=rtpmap:18 G729/8000");

  # On call forwarding we cannot accept the initial 183.
  # Substitute with 180 (done in INVITE).
  if( t_check_status("183") && isflagset(flag_has_forwarding) ) {
      drop;
  }

  if mediaproxy
  route(media_proxy_reply_handler); # MP on-reply
  end if mediaproxy
  if has_onreply_nat
  route(onreply_nat);
  end if has_onreply_nat
}

# -----------------------------------------------------------------
# Failure route
# -----------------------------------------------------------------

failure_route[invite]
{
  xlog("L_INFO","-- failure_route(1) -- $rm $ru\n");

  if(!is_method("INVITE")) {
    return;
  }

  # For fax negotiation 488 might be a normal outcome.
  if(!t_check_status("488")) {
    xlog("L_INFO","-- failure_route(1) -- Stopping mediaproxy\n");
    if mediaproxy
    route(stop_media_proxy); # End media session
    end if mediaproxy
  } else {
    xlog("L_INFO","-- failure_route(1) -- Ignoring 488\n");
  }

  if(t_was_cancelled() || t_check_status("504")) {
    xlog("L_INFO","-- failure_route(1): conversation was canceled.\n");
    return;
  }

  # Handle redirects
  if( t_check_status("302") ) {
    get_redirects("6:2"); # max_total:max_branch, reason
    serialize_branches(1);
    route(forwarder);
    exit;
  }

  # Trunk-side processing
  if( isflagset(flag_trunk_routing) ) {

    # Don't failover on busy, loop detected, incomplete address, or not found
    # Note: 480 used to be here but since it is used as catch-all by FS it is better to progress on it.
    if( t_check_status("48[67241]|40[34]|60[0-9]") ) {
      xlog("L_INFO","-- failure_route(1): trunk: no progress on busy, loop, incomplete, forbidden, not found\n");
      return;
    }

  }

  # Process failure cases
  if (next_branches()) {
    t_on_failure("invite");
    route(forwarder);
    exit;
  }

  # Trunk-side processing
  if( isflagset(flag_trunk_routing) ) {

    # Ring no Answer
    if( isbflagset(bflag_in_progress) && t_check_status("408") ) {
      xlog("L_INFO","-- failure_route(1): trunk: no answer\n");
      send_reply("486","No Answer");
      return;
    }

  }

  if not skip_lineside
    # Line-side processing

    # On 486 Busy Here use CFB
    if( t_check_status("486") ) {
      xlog("L_INFO","-- Attempting CFB\n");
      if( $avp(cfb) ) {
        if mediaproxy
        route(stop_media_proxy);
        end if mediaproxy
        # RFC5806
        remove_hf("Contact");
        append_to_reply("Contact: $avp(cfb)\r\n");
        append_to_reply("Diversion: $ru;reason=user-busy\r\n");
        send_reply("302","Call Forward Busy");
        exit;
      }

      # No CFB, forward along
      send_reply("486","Busy Here");
      return;
    }

    # Other errors trigger CFDA
    xlog("L_INFO","-- Attempting CFDA\n");
    if( $avp(cfda) ) {
      if mediaproxy
      route(stop_media_proxy);
      end if mediaproxy
      # RFC5806
      remove_hf("Contact");
      append_to_reply("Contact: $avp(cfda)\r\n");
      append_to_reply("Diversion: $ru;reason=no-answer\r\n");
      send_reply("302","Call Forward Didnt Answer");
      exit;
    } else {
      # Ring no Answer
      if( t_check_status("408") ) {
        if( isbflagset(bflag_in_progress) ) {
          xlog("L_INFO","-- failure_route(1): lineside: no answer\n");
          send_reply("486","No Answer");
          return;
        } else {
          xlog("L_INFO","-- failure_route(1): lineside: failed to send\n");
          send_reply("504","Failed to Send");
          return;
        }
      }
    }
  end if not skip_lineside

  # No alternate found.
}
