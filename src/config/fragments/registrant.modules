loadmodule "uac_auth.so"
modparam("uac_auth", "auth_username_avp","$avp(uac_username)")
modparam("uac_auth", "auth_realm_avp","$avp(uac_realm)")
modparam("uac_auth", "auth_password_avp","$avp(uac_password)")

loadmodule "b2b_entities.so"

loadmodule "b2b_logic.so"
modparam("b2b_logic", "b2bl_from_spec_param", "$var(b2bl_from)")

loadmodule "uac_registrant.so"
modparam("uac_registrant","hash_size",${uac_hash_size})
modparam("uac_registrant","timer_interval",${uac_timer_interval})
modparam("uac_registrant","db_url","${db_url}")

modparam("tm", "pass_provisional_replies", 1)

# invite.modules -- modules and configuration shared by all forwarding INVITE modules

loadmodule "dialog.so"
define has_dialog_module
modparam("dialog", "enable_stats", 1) # default 1

# Dialog matching
modparam("dialog", "rr_param", "dlg") # default did
modparam("dialog", "dlg_match_mode", ${dlg_match_mode}) # default 0 (match on rr_param only); 1 = match on rr_param, use SIP (RFC3261) matching as fallback

# timeout/BYE
modparam("dialog", "default_timeout", ${dialog_timeout}) # default 43200 (12h)
# Set maximum duration of dialog (=call)
modparam("dialog", "dlg_extra_hdrs", "X-CCNQ3-Reason: Call too long\r\n")

modparam("dialog", "profiles_with_value", "endpoint ; number ; account")

if cachedb_url
modparam("dialog", "cachedb_url", "${cachedb_url}")
end if cachedb_url

modparam("dialog", "db_mode", 0) # No database of dialogs

modparam("dialog", "profiles_with_value", "endpoint;number")
modparam("dialog", "profiles_no_value", "inbound;outbound")

if replicate_to
modparam("dialog", "accept_replicated_dialogs", 1)
modparam("dialog", "replicate_dialogs_to", "${replicate_to}")
end if replicate_to
