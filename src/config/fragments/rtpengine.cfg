define has_sdp

# dflag_rtp_engaged indicates whether another media relay is already
# engaged in the chain -- it's better to avoid introducing many as
# this causes issues with media start.
set dflag_rtp_engaged to 2

# flag_rtp (transaction-level) indicates whether we already did a sdp_offer()
# on the transaction. It is reset if sdp_delete() is called.
set flag_rtp to 3

# dflag_rtp indicates whether we already did a sdp_answer() on the call.
# It is reset if sdp_delete() is called
set dflag_rtp to 3

# -----------------------------------------------------------------
# Media Proxy / RTP Proxy handling
# -----------------------------------------------------------------

route[__sdp_offer]
{
  xlog("L_DBG","-- sdp_offer --\n");

  # These are coding errors.
  if( is_dlg_flag_set("${dflag_rtp}") ) {
    xlog("L_ERR","-- sdp_offer -- already on dialog\n");
    return;
  }

  if( isflagset(flag_rtp) ) {
    xlog("L_ERR","-- sdp_offer -- already on transaction\n");
    return;
  }

  if( rtpengine_offer() ) {
    xlog("L_DBG","-- sdp_offer -- OK\n");
    setflag(flag_rtp);
  } else {
    xlog("L_ERR","-- sdp_offer -- failed\n");
  }
}

route[__sdp_answer]
{
  xlog("L_DBG","-- sdp_answer --\n");

  # This is normal processing of the X-CCNQ3-MediaProxy header.
  if( is_dlg_flag_set("${dflag_rtp_engaged}") ) {
    xlog("L_DBG","-- sdp_answer -- bypassing\n");
    return;
  }

  # These are coding errors.
  if( is_dlg_flag_set("${dflag_rtp}") ) {
    xlog("L_ERR","-- sdp_answer -- already on dialog\n");
    return;
  }

  if( !isflagset(flag_rtp) ) {
    xlog("L_ERR","-- sdp_answer -- no sdp_offer\n");
    return;
  }

  if( rtpengine_answer() ) {
    xlog("L_DBG","-- sdp_answer -- OK\n");
    set_dlg_flag("${dflag_rtp}");
  } else {
    xlog("L_ERR","-- sdp_answer -- failed\n");
  }
}

route[sdp_delete]
{
  xlog("L_DBG","-- stop_media_proxy --\n");

  if( !is_dlg_flag_set("${dflag_rtp}") && !isflagset(flag_rtp) ) {
    xlog("L_ERR","-- sdp_delete -- no sdp_offer or sdp_answer\n");
    return;
  }

  if( rtpengine_delete() ) {
    reset_dlg_flag("${dflag_rtp}");
    setflag(flag_rtp);
  } else {
    xlog("L_ERR","-- sdp_delete -- failed\n");
  }
}

# -----------------------------------------------------------------
# Request handler for NAT traversal
# -----------------------------------------------------------------

route[sdp_method_handler]
{
  xlog("L_DBG","-- sdp_method_handler --\n");

  # Note: this test will fail for some situations with late-neg.
  if( ${mp_always} ||
      is_dlg_flag_set("${dflag_rtp}") ||
      isflagset(flag_request_mp_callee) ||
      isbflagset(bflag_request_mp_callee) ||
      isflagset(flag_request_mp_caller) ) {
    xlog("L_DBG","-- sdp_method_handler -- media relay requested\n");
  } else {
    xlog("L_DBG","-- sdp_method_handler -- media relay not requested\n");
    return;
  }

  if(is_method("INVITE")) {

    if($param(0)) {
      # This is normal processing of the X-CCNQ3-MediaProxy header.
      if( is_dlg_flag_set("${dflag_rtp_engaged}") ) {
        xlog("L_DBG","-- sdp_offer -- bypassing\n");
        return;
      }

      if( is_present_hf("X-CCNQ3-MediaProxy") ) {
        xlog("L_DBG","-- sdp_offer -- already engaged\n");
        set_dlg_flag("${dflag_rtp_engaged}");
        return;
      }

      remove_hf("X-CCNQ3-MediaProxy");
      append_hf("X-CCNQ3-MediaProxy: ${__hostname}\r\n");
      # /end
    }
    if(has_body("application/sdp")) {
      route(__sdp_offer);
    }
  }

  # if(is_method("UPDATE")) ??

  if(is_method("ACK")) {
    route(__sdp_answer);
  }

  if(is_method("BYE") || is_method("CANCEL")) {
    route(sdp_delete);
  }
}

# -----------------------------------------------------------------
# Reply-codes handler for NAT traversal
# -----------------------------------------------------------------

route[sdp_reply_handler]
{
  xlog("L_DBG","-- sdp_reply_handler --\n");

  # Update the SDP information if needed.
  if(t_check_status("180|183|2[0-9][0-9]")) {
    if( has_body("application/sdp") ) {
      if(isflagset(flag_rtp)) {
        # INVITE had SDP
        route(__sdp_answer);
      } else {
        # Late-neg, INVITE had no SDP
        route(__sdp_offer);
      }
    }
  }
  # Don't tear-down on error, we might fail over.
}
