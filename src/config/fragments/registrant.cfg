# Name: registrant
# Group: non-loose-route
# Description: handler for out-of-dialog (non loose-routed) messages for the registrant application.
# Status: production

route[non_loose_route_handler] {
    xlog("L_INFO","-- non_loose_route_handler -- NLR $rm $ru (Call-ID $ci)\n");

    # Used for monitoring.
    if(is_method("OPTIONS")) {
      send_reply("405","Method Not Allowed");
      exit;
    }

    # NOTE: we do not authenticate here.

    # Non-INVITEs are forwarded downstream to our support server.
    # (Although they probably might as well be dropped?)
    if(!is_method("INVITE")) {
      $ru = "sip:"+$rU+"@${local_ipv4}:${local_port}";
      t_relay();
      exit;
    }

      if( is_present_hf("X-CCNQ3-Registrant-HostPort") ) {
        $fs = "udp:"+$hdr(X-CCNQ3-Registrant-HostPort);
      } else {
      if source_ip
        xlog("L_INFO","-- non_loose_route_handler: Using default source_ip ${source_ip}:${source_port}");
        $fs = "udp:${source_ip}:${source_port}";
      end if source_ip
      if not source_ip
        send_reply("400","Missing X-CCNQ3-Registrant-HostPort header");
        exit;
      end if not source_ip
      }
      if( is_present_hf("X-CCNQ3-Registrant-Password") ) {
        if( is_present_hf("X-CCNQ3-Registrant-Username") ) {
          $avp(uac_username) = $hdr(X-CCNQ3-Registrant-Username);
        } else {
          $avp(uac_username) = $fU;
        }
        $avp(uac_password) = $hdr(X-CCNQ3-Registrant-Password);
      }

      # Outbound (toward-registrar) INVITE (new outgoing calls)
      # are ran through the topology hiding B2BUA code.
      if( is_present_hf("X-CCNQ3-Registrant-Target") ) {
        $avp(uac_realm) = $hdr(X-CCNQ3-Registrant-Realm);
        $ru = "sip:"+$rU+"@"+$hdr(X-CCNQ3-Registrant-Target);
        $var(b2bl_from) = "sip:"+$avp(uac_username)+"@"+$hdr(X-CCNQ3-Registrant-Target);
        remove_hf("X-CCNQ3-*","g");
        remove_hf("P-Charge-Info");
        remove_hf("P-Asserted-Identity");
        b2b_init_request("top hiding");
      } else {
      # Inbound (from-registrar) INVITE (new incoming calls)
      # are forwarded downstream to our support server.
        record_route();
        $ru = "sip:"+$rU+"@${local_ipv4}:${local_port}";
        create_dialog("B");
        t_relay();
      }
}

# With non-local URI

route[non_local_uri_handler] {
    xlog("L_INFO","-- non_local_uri_handler: Non-local RURI $ru\n");

    xlog("L_INFO","-- non_local_uri_handler: Relaying forbidden\n");
    if(is_method("INVITE") || is_method("REGISTER")) {
      # This isn't the proper response code, but it blocks buggers trying
      # to come in using IP addresses instead of domain names, for example.
      send_reply("200", "Relaying Forbidden");
    } else {
      send_reply("403", "Relaying Forbidden");
    }
}

if notify
onreply_route {
  xlog("L_INFO","-- onreply_route (in registrant) -- $fu $rs --\n");
  if(is_method("REGISTER") && $rs != "100" && $rs != "401" && $rs != "200") {
    xlog("L_INFO","-- registrant received REGISTER with unexpected response code $rs --\n");
    $json(event) := '{}';
    $json(event/type) = 'registrant_failure';
    $json(event/host) = '${__hostname}';
    $json(event/message) = $mb;
    $json(event/ip) = $si;
    $json(event/status) = $rs;
    # No transaction == no async.
    rest_post("${notify}/ops","$json(event)","application/json","$var(body)","$var(type)","$var(code)");
  }
}

end if notify
