# Name: invite-trunk-fixed
# DescriptioN: Static failover

# -----------------------------------------------------------------
# INVITE Message Handler
# -----------------------------------------------------------------

route[invite_trunk]
{
  xlog("L_DBG","-- route(invite_trunk_fixed)\n");

  $var(original_ru) = $ru;

  # remove any (transport,account,..) params from the RURI
  # ($rP contains current transport protocol)
  $ru = "sip:"+$rU+"@"+$rd+":"+$rp;

  $json(params) := '{}';
  $json(params/source) = $json(src_number/number);
  $json(params/destination) = $rU;
  $json(params/endpoint) = $json(src_endpoint/endpoint);
  $json(params/domain) = $rd;
  $json(params/ruri) = $ru;

  if(rest_post("${services_url}/route","$json(params)","application/json","$json(route)")) {

    # The response from the service is a hash with at least `gateways` as an array.
    $var(i) = 0;
    $avp(cdr) := null;
    $avp(force_mp) := null;
    while( $json(gateway) = $json(route/gateways[$var(i)]) ) {

      # Keep the branch ordered when we hit serialize_branch()
      $branch(q) = $var(i);

      # Force send through
      if internal_ip
        $branch(socket) = "${internal_ip}"; # force_send_socket(${internal_ip});
      end if internal_ip

      # This is equivalent to the `uri` resolution in tough-rate/middleware/call-handle.coffee.md#L204
      if( $json(gateway/uri) ) {
        $branch(uri) = $json(gateway/uri);
      } else {
        $branch(uri) = "sip:"+$rU+"@"+$json(gateway/address);
      }

      if( $json(gateway/force_mp) == 'true' ) {
        $(avp(force_mp)[$var(i)]) = 1;
      }

      # Note: this will prepend an extra branch we don't need. Is this correct? FIXME
      append_branch();

      # Per-branch CDR data
      if( $json(gateway/attrs) && $json(gateway/attrs/cdr) ) {
        $(avp(cdr)[$var(i)]) = $json(gateway/attrs/cdr);
      }

      # Loop
      $var(i) = $var(i) + 1;
    }

    xlog("L_DBG","-- route(invite_trunk_fixed): routing was successful\n");
    setflag(flag_trunk_routing);
    t_on_branch("invite_trunk_fixed");
    if mediaproxy
    route(update_media_proxy);  # Start MP if needed
    end if mediaproxy
    route(initial_forwarder);   # Forward
    exit;
  }

  # Restore original RURI in case of failure, and continue.
  $ru = $var(original_ru);
}

branch_route[invite_trunk_fixed]
{
  $var(idx) = $T_branch_idx;
  $var(cdr) = $(avp(cdr)[$var(idx)]);
  if($var(cdr)) {
    remove_hf("X-CCNQ3-Attrs");
    append_hf("X-CCNQ3-Attrs: $var(cdr)\r\n");
  }
  $var(force_mp) = $(avp(force_mp)[$var(idx)]);
  if($var(force_mp)) {
    setbflag(bflag_request_mp_callee);
  }
}
